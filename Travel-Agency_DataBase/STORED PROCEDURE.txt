3.1.3.1

DELIMITER $
 CREATE PROCEDURE insert_driver
 ( IN m_drv_AT CHAR(10),
   IN m_wrk_name VARCHAR(20),
   IN m_wrk_lname VARCHAR(20),
   IN m_wrk_salary FLOAT(7,2),
   IN m_drv_route ENUM('LOCAL','ABROAD'),
   IN m_drv_experience TINYINT(4)
 )
 
 BEGIN
   DECLARE min_branch_code INT(11);

SELECT br_code
INTO min_branch_code
FROM
(
 SELECT b.br_code,count(d.drv_AT) AS 'Number of drivers'
 FROM branch AS b
 INNER JOIN worker AS w ON b.br_code=w.wrk_br_code
 INNER JOIN driver AS d ON w.wrk_AT=d.drv_AT
 GROUP BY b.br_code
 LIMIT 1
) AS subquery;

INSERT INTO worker(wrk_AT,wrk_name,wrk_lname,wrk_salary,wrk_br_code,wrk_status)
VALUES (m_drv_AT,m_wrk_name,m_wrk_lname,m_wrk_salary,min_branch_code,'DRIVER');

INSERT INTO driver(drv_AT,drv_route,drv_experience)
VALUES (m_drv_AT,m_drv_route,m_drv_experience);

END $
DELIMITER;


3.1.3.2

DELIMITER $

CREATE PROCEDURE show_trip_details
(  IN s_branch_code INT(11),
   IN upperlimit_date DATE,
   IN lowerlimit_date DATE
)
    
BEGIN
    
 SELECT t.tr_cost,
        t.tr_maxseats,
        count(r.res_tr_id) AS 'Total_resesrvations',
        t.tr_maxseats-count(r.res_tr_id) AS 'Empty_seats',
        wd.wrk_name  AS 'Driver_name',
        wd.wrk_lname AS 'Driver_lastaname',
        wg.wrk_name  AS 'Guide_name',
        wg.wrk_lname AS 'Guide_lastaname',
        t.tr_departure AS 'Departure_date',
        t.tr_return AS 'Return_date'
FROM trip AS t
LEFT JOIN reservation AS r ON r.res_tr_id=t.tr_id
LEFT JOIN driver AS d ON t.tr_drv_AT=d.drv_AT 
LEFT JOIN worker AS wd ON d.drv_AT=wd.wrk_AT
LEFT JOIN guide AS g ON t.tr_gui_AT=g.gui_AT  
LEFT JOIN worker AS wg ON g.gui_AT=wg.wrk_AT

WHERE 
    t.tr_br_code=s_branch_code
AND t.tr_departure BETWEEN lowerlimit_date AND upperlimit_date
GROUP BY t.tr_id;
         

END $
DELIMITER ;


3.1.3.3

DELIMITER $

CREATE PROCEDURE delete_admin

( 
  IN admin_name VARCHAR(20),
  IN admin_lname VARCHAR(20)
)

BEGIN 

DECLARE worker_id CHAR(10);
DECLARE admin_type ENUM('LOGISTICS','ADMINISTRATIVE','ACCOUNTING');
DECLARE manager_id CHAR(10);

SELECT wrk_AT,adm_type
INTO worker_id,admin_type
FROM worker 
INNER JOIN admin ON adm_AT=wrk_AT
WHERE wrk_name=admin_name AND wrk_lname=admin_lname;

IF (admin_type != 'ADMINISTRATIVE') THEN  
      DELETE FROM worker WHERE wrk_name=admin_name AND wrk_lname=admin_lname;
      DELETE FROM admin  WHERE adm_AT=worker_id; 

ELSE 
     SELECT mng_adm_AT
     INTO manager_id 
     FROM manages
     WHERE mng_adm_AT=worker_id;
   
         IF (manager_id IS NULL) THEN
              DELETE FROM worker WHERE wrk_AT=manager_ID;
              DELETE FROM admin  WHERE adm_AT=manager_ID;
   
         ELSE SELECT 'Deletion is not allowed.This person is managing a branch'
         END IF;
END IF;


END $

DELIMITER ;

